{"version":3,"sources":["../src/html-writer.js"],"names":["BaseWriter","require","helpers","logger","HtmlWriter","getExtension","write","html","buildHeader","pages","converter","getPages","debug","length","forEach","page","pageId","getPageIdFromFilenameOrLink","file","title","buildFooter","getFilename","htmlHeader","getOption","getCssTags","getExtraCss","getJsTags","getLogoImage","getToc","getHtml","getFooter","createImageLogoTag","path","footerOption","module","exports"],"mappings":"AAAA,aAEA,GAAIA,YAAaC,QAAQ,eAAR,CAAjB,CACIC,QAAUD,QAAQ,WAAR,CADd,CAEIE,OAASF,QAAQ,UAAR,CAFb,CAIA,KAAMG,WAAN,QAAyBJ,WAAW,CAElCK,cAAe,CACb,MAAO,MACR,CAEDC,OAAS,CACP,GAAIC,GAAO,KAAKC,WAAL,EAAX,CACIC,EAAQ,KAAKC,SAAL,CAAeC,QAAf,EADZ,CAWA,MARAR,QAAOS,KAAP,CAAa,uCAAb,CAAsDH,EAAMI,MAA5D,CAQA,CANA,KAAKH,SAAL,CAAeC,QAAf,GAA0BG,OAA1B,CAAkCC,GAAQ,CACxC,GAAIC,GAASd,QAAQe,2BAAR,CAAoCF,EAAKG,IAAzC,CAAb,CACAX,GAAS,uBAAsBS,CAAO,aAAYD,EAAKI,KAAM,SAArD,CAAgEJ,EAAKR,IAC9E,CAHD,CAGG,IAHH,CAMA,CADAA,GAAQ,KAAKa,WAAL,EACR,CAAO,MAAMd,KAAN,CAAY,KAAKe,WAAL,EAAZ,CAAgCd,CAAhC,CACR,CAEDC,aAAc,CAEZ,GAAIc,GAAc;;;;;;aAMT,KAAKZ,SAAL,CAAea,SAAf,CAAyB,OAAzB,CAAkC;MACzC,KAAKC,UAAL,EAAkB;aACX,KAAKC,WAAL,EAAmB;MAC1B,KAAKC,SAAL,EAAiB;;;;;;;;;;;;;+DAawC,KAAKhB,SAAL,CAAea,SAAf,CAAyB,OAAzB,CAAkC;;;;YAIrF,KAAKI,YAAL,EAAoB;;;;;;;;;;gBAUhB,KAAKjB,SAAL,CAAekB,MAAf,GAAwBC,OAAxB,EAAkC;gBAClC,KAAKC,SAAL,EAAiB;;;;;;;CArC7B,CA6CA,MAAOR,EACR,CAEDF,aAAc,CACE;;;;;;;;QADF,CAUZ,gOACD,CAEDW,mBAAmBC,CAAnB,CAAyB,CACnB,MAAQ;;;iDAGiCA,CAAK;oBAEnD,CAEDF,WAAY,CACV,GAAIG,GAAe,KAAKvB,SAAL,CAAea,SAAf,CAAyB,QAAzB,CAAnB,CACA,MAAOU,GAAgB,uBAAsBA,CAAa,QAAnD,CAA6D,EACrE,CA/FiC,CAmGpCC,OAAOC,OAAP,CAAiB/B,U","file":"html-writer.js","sourcesContent":["\"use strict\"\n\nvar BaseWriter = require(\"./base-writer\")\n  , helpers = require('./helpers')\n  , logger = require('./logger')\n\nclass HtmlWriter extends BaseWriter {\n\n  getExtension() {\n    return 'html'\n  }\n\n  write () {\n    var html = this.buildHeader(),\n        pages = this.converter.getPages()\n\n    logger.debug('Generating html: %d pages to generate', pages.length)\n\n    this.converter.getPages().forEach(page => {\n      var pageId = helpers.getPageIdFromFilenameOrLink(page.file)\n      html += `<p class=\"page\" id=\"${pageId}\"></p><h1>${page.title}</h1>\\n` + page.html\n    }, this)\n\n    html += this.buildFooter()\n    return super.write(this.getFilename(), html)\n  }\n\n  buildHeader() {\n\n    var htmlHeader = `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>${this.converter.getOption('title')}</title>\n    ${this.getCssTags()}\n    <style>${this.getExtraCss()}</style>\n    ${this.getJsTags()}\n  </head>\n  <body id=\"page-top\" class=\"html-doc\">\n    <!-- Fixed navbar -->\n    <div class=\"navbar navbar-default navbar-fixed-top\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n          </button>\n          <a class=\"navbar-brand doc-title\" href=\"#page-top\">${this.converter.getOption('title')}</a>\n        </div>\n        <div id=\"navbar\" class=\"navbar-collapse collapse\">\n          <ul class=\"nav navbar-nav\">\n          ${this.getLogoImage()}\n        </div><!--/.nav-collapse -->\n      </div>\n    </div>\n    <div id=\"documentation-container\" class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-3\">\n          <div class=\"nav-container\">\n            <div class=\"nav-inner\" id=\"scroll-spy\" style=\"width: min-content; overflow: auto; top: 60px; bottom: 0; padding 10px 0 10px 0;\">\n              <span class=\"toc\"></span>\n              ${this.converter.getToc().getHtml()}\n              ${this.getFooter()}\n            </div>\n          </div>\n        </div>\n\n\n        <div class=\"col-md-9\">\n`\n    return htmlHeader\n  }\n\n  buildFooter() {\n    var footer = `\n        </div> <!-- /div.col-md-9 -->\n      </div> <!-- /div.row -->\n    </div> <!-- /div.container -->\n  </body>\n  <script>\n    $('body').scrollspy({ target: '#scroll-spy', offset: 40 })\n  </script>\n</html>`\n    return footer\n  }\n\n  createImageLogoTag(path) {\n        return `\n              </ul>\n                <ul class=\"nav navbar-nav navbar-right gwc-navbar-right\">\n                <li><img class=\"logo-img\" src=\"${path}\"></li>\n              </ul>`\n  }\n\n  getFooter() {\n    let footerOption = this.converter.getOption('footer')\n    return footerOption ? `<div class=\"footer\">${footerOption}</div>` : ''\n  }\n\n}\n\nmodule.exports = HtmlWriter\n"]}